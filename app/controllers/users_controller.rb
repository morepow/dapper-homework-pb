=begin
Peter Bardon

Dapper Labs Homework Assignment

The version of the OpenAPI document: 1.0.0
Generated by: https://github.com/openapitools/openapi-generator.git

=end
class UsersController < ApplicationController
  def index
    unless Token.valid_token?(request.headers[Token.token_header_name])
      render json: { error: 'invalid token' }, status: :unauthorized
      return
    end
    render json: { users: User.all.map{ |user| { email: user['email'], firstName: user['first_name'], lastName: user['last_name'] } } }, status: :ok
  end

  def update_user
    unless request.headers[Token.token_header_name] && Token.valid_token?(request.headers[Token.token_header_name])
      render json: { error: 'invalid token' }, status: :unauthorized
      return
    end

    token = Token.find_by_token(request.headers[Token.token_header_name])

    user_token = token.decode

    unless user_token[0] && user_token[0]['user_id']
      render json: { error: 'invalid token' }, status: :unauthorized
      return
    end

    user = User.find(user_token[0]['user_id'])

    unless user && user.valid_user_token?(request.headers[Token.token_header_name])
      render json: { error: 'invalid token' }, status: :unauthorized
      return
    end

    user.update({ first_name: user_params[:firstName], last_name: user_params[:lastName] })

    user.reload

    render json: { firstName: user.first_name, lastName: user.last_name }, status: :ok
  end

  def user_params
    params.permit(:firstName, :lastName)
  end
end
